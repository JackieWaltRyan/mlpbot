import sys
from asyncio import sleep
from json import loads
from os import execl
from random import choice, randint
from re import findall
from traceback import format_exc

from discord import Embed
from discord.ext.commands import command, has_permissions, Cog
from discord.ext.tasks import loop
from requests import get

from bot import DB, SET

ARTS = DB.server.channels.find_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": "ü¶Ñ–∞—Ä—Ç—ã"})["_id"]
DARTS = DB.server.channels.find_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": "ü¶Ñ—Ç—ë–º–Ω—ã–µ_–∞—Ä—Ç—ã"})["_id"]


class Arts(Cog):
    def __init__(self, bot):
        self.BOT = bot
        self.checkarts.start()
        self.sendarts.start()
        self.darkarts.start()

    def cog_unload(self):
        self.checkarts.cancel()
        self.sendarts.cancel()
        self.darkarts.cancel()

    async def messages(self, name, value):
        try:
            for uid in [x for x in SET["–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"].values()]:
                try:
                    await self.BOT.get_user(uid).send(embed=Embed(
                        title="–°–æ–æ–±—â–µ–Ω–∏–µ!", color=0x008000).add_field(name=name, value=value))
                except Exception:
                    pass
        except Exception:
            print(format_exc())

    async def alerts(self, name, value):
        try:
            for uid in [x for x in SET["–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"].values()]:
                try:
                    await self.BOT.get_user(uid).send(embed=Embed(
                        title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!", color=0xFFA500).add_field(name=name, value=value))
                except Exception:
                    pass
        except Exception:
            print(format_exc())

    async def errors(self, name, value, reset=0):
        try:
            for uid in [x for x in SET["–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"].values()]:
                try:
                    await self.BOT.get_user(uid).send(embed=Embed(
                        title="–û—à–∏–±–∫–∞!", color=0xFF0000).add_field(name=name, value=value))
                except Exception:
                    pass
            if reset == 1:
                execl(sys.executable, "python", "bot.py", *sys.argv[1:])
        except Exception:
            print(format_exc())

    @loop(count=1)
    async def checkarts(self):
        try:
            headers = ({"apikey": "fbd30ba0-56be-11ec-9fc5-07d4cf167e6b"},
                       {"apikey": "739ddd40-56c4-11ec-83af-4306261ca458"},
                       {"apikey": "1eaa41e0-6e48-11ec-befe-ad3a1f46b0f6"})
            params = (("url", "https://4pda.to/forum/index.php?showtopic=403239&view=getnewpost"), ("render", "true"),
                      ("location", "eu"), ("device_type", "mobile"))
            rget = get("https://app.zenscrape.com/api/v1/get", headers=choice(headers), params=params).content
            url = "//4pda.to/forum/dl/post/"
            counts = len(findall(rf"{url}(\d*)/(?:[_\-]*\w+[_\-]+){{2,}}\w+[(\d+)%]*\.(?:jpg|png|gif|jpeg)",
                                 f"{rget}"))
            if counts != 0:
                news = int(findall(rf"{url}(\d*)/(?:[_\-]*\w+[_\-]+){{2,}}\w+[(\d+)%]*\.(?:jpg|png|gif|jpeg)",
                                   f"{rget}")[-1][:-3])
                posts1 = findall(
                    rf"{url}((?:{news - 1}\d{{3}})/(?:[_\-]*\w+[_\-]+){{2,}}\w+[(\d+)%]*\.(?:jpg|png|gif|jpeg))",
                    f"{rget}")
                posts2 = findall(
                    rf"{url}((?:{news}\d{{3}})/(?:[_\-]*\w+[_\-]+){{2,}}\w+[(\d+)%]*\.(?:jpg|png|gif|jpeg))",
                    f"{rget}")
                arts = DB.server.warts.find_one({"_id": "–ê—Ä—Ç—ã"})
                if int(news) > int(arts["ID"]):
                    DB.server.warts.update_one({"_id": "–ê—Ä—Ç—ã"}, {"$set": {"ID": news}})
                    DB.server.warts.update_one({"_id": "–ê—Ä—Ç—ã"},
                                               {"$push": {"–ê—Ä—Ç—ã": {"$each": posts1 + posts2, "$position": 0}}})
                    await self.messages("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ç–æ–≤:", f"{len(posts1) + len(posts2)} –∞—Ä—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ë–î!\n"
                                                           f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {len(arts['–ê—Ä—Ç—ã'])} –∞—Ä—Ç–æ–≤!")
        except Exception:
            await self.errors("–ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–æ–≤:", format_exc())

    @loop()
    async def sendarts(self):
        try:
            while True:
                arts = DB.server.warts.find_one({"_id": "–ê—Ä—Ç—ã"})
                await self.BOT.get_channel(int(ARTS)).send(f"https://4pda.to/forum/dl/post/{arts['–ê—Ä—Ç—ã'][0]}")
                DB.server.warts.update_one({"_id": "–ê—Ä—Ç—ã"}, {"$pop": {"–ê—Ä—Ç—ã": -1}})
                await sleep(int(arts["–¢–∞–π–º–µ—Ä"]) * 60)
        except Exception:
            await self.errors("–û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ç–æ–≤:", format_exc())

    @loop()
    async def darkarts(self):
        try:
            while True:
                dark = DB.server.warts.find_one({"_id": "–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã"})
                for tag in dark["–¢–µ–≥–∏"]:
                    try:
                        request = loads(get(f"https://derpibooru.org/api/v1/json/search/images?page=1&per_page=50&"
                                            f"filter_id=2&q={tag}").text)["images"]
                        await self.BOT.get_channel(int(DARTS)).send(f"{request[randint(1, 50)]['view_url']}")
                    except Exception:
                        pass
                await sleep(int(dark["–¢–∞–π–º–µ—Ä"]) * 60)
        except Exception:
            await self.errors("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–º–Ω—ã—Ö –∞—Ä—Ç–æ–≤:", format_exc())

    @command(description="8", name="arts", help="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è Arts",
             brief="–ù–∏—á–µ–≥–æ / `–ü–∞—Ä–∞–º–µ—Ç—Ä` / `–í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö`", usage="!arts dark 60")
    @has_permissions(administrator=True)
    async def arts(self, ctx, trigger: str = None, timetag: str = None):
        try:
            if ctx.channel.id == int(ARTS) or ctx.channel.id == int(DARTS):
                await ctx.message.delete(delay=1)
                arts, dark = DB.server.warts.find_one({"_id": "–ê—Ä—Ç—ã"}), DB.server.warts.find_one({"_id": "–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã"})
                e = None
                if trigger is None and timetag is None:
                    e = Embed(title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è \"Arts\":", color=ctx.author.color)
                    e.add_field(name="–ö–æ–º–∞–Ω–¥—ã –∫–∞–Ω–∞–ª–∞ \"–ê—Ä—Ç—ã\":", inline=False,
                                value="–ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: **!arts `–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö`**")
                    e.add_field(name="–ö–æ–º–∞–Ω–¥—ã –∫–∞–Ω–∞–ª–∞ \"–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã\":", inline=False,
                                value="–ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: **!arts dark `–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö`**\n"
                                      "–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥ –¥–ª—è –ø–æ–∏—Å–∫–∞: **!arts +tag `–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞`**\n"
                                      "–£–¥–∞–ª–∏—Ç—å —Ç–µ–≥ –∏–∑ –ø–æ–∏—Å–∫–∞: **!arts -tag `–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞`**")
                    e.add_field(name="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ \"–ê—Ä—Ç—ã\":", inline=False,
                                value=f"–ê—Ä—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(arts['–ê—Ä—Ç—ã'])}\n"
                                      f"–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞—Ä—Ç–æ–≤: {arts['–¢–∞–π–º–µ—Ä']} –º–∏–Ω—É—Ç")
                    e.add_field(name="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ \"–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã\":", inline=False,
                                value=f"–¢–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞: {', '.join(dark['–¢–µ–≥–∏'])}\n"
                                      f"–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞—Ä—Ç–æ–≤: {dark['–¢–∞–π–º–µ—Ä']} –º–∏–Ω—É—Ç")
                if trigger is not None:
                    if trigger == "+tag":
                        if timetag is not None:
                            e = Embed(title="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞:", color=ctx.author.color)
                            check = loads(get(f"https://derpibooru.org/api/v1/json/search/images?per_page=50&"
                                              f"filter_id=2&q={timetag.lower()}").text)["images"]
                            if len(check) == 50:
                                if timetag.lower() not in dark["–¢–µ–≥–∏"]:
                                    DB.server.warts.update_one({"_id": "–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã"},
                                                               {"$push": {"–¢–µ–≥–∏": timetag.lower()}})
                                    e.add_field(name="–£—Å–ø–µ—à–Ω–æ:", inline=False, value=f"{timetag.lower()}")
                                else:
                                    e.add_field(name="–û—à–∏–±–∫–∞:", inline=False,
                                                value=f"–¢–µ–≥ **{timetag.lower()}** —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ!")
                            else:
                                e.add_field(name="–û—à–∏–±–∫–∞:", inline=False,
                                            value=f"–ü–æ —Ç–µ–≥—É **{timetag.lower()}** —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!")
                    elif trigger == "-tag":
                        if timetag is not None:
                            e, tags = Embed(title="–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–∞:", color=ctx.author.color), dark["–¢–µ–≥–∏"]
                            try:
                                tags.remove(str(timetag.lower()))
                                e.add_field(name="–£—Å–ø–µ—à–Ω–æ:", inline=False, value=f"{timetag.lower()}")
                            except Exception:
                                e.add_field(name="–û—à–∏–±–∫–∞:", inline=False,
                                            value=f"–¢–µ–≥ **{timetag.lower()}** –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö!")
                            DB.server.warts.update_one({"_id": "–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã"}, {"$set": {"–¢–µ–≥–∏": tags}})
                    elif trigger == "dark":
                        if timetag is not None:
                            if len(findall(r"\d+", timetag)) != 0:
                                time = int("".join(findall(r"\d+", timetag)))
                                DB.server.warts.update_one({"_id": "–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã"}, {"$set": {"–¢–∞–π–º–µ—Ä": time}})
                                e = Embed(title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:", color=ctx.author.color,
                                          description=f"–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ \"–¢–µ–º–Ω—ã–µ –ê—Ä—Ç—ã\" "
                                                      f"–∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ **{time}** –º–∏–Ω—É—Ç!")
                    else:
                        if len(findall(r"\d+", trigger)) != 0:
                            time = int("".join(findall(r"\d+", trigger)))
                            DB.server.warts.update_one({"_id": "–ê—Ä—Ç—ã"}, {"$set": {"–¢–∞–π–º–µ—Ä": time}})
                            e = Embed(title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:", color=ctx.author.color,
                                      description=f"–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ \"–ê—Ä—Ç—ã\" –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ **{time}** –º–∏–Ω—É—Ç!")
                e.set_footer(text=SET["–§—É—Ç–µ—Ä"]["–¢–µ–∫—Å—Ç"], icon_url=SET["–§—É—Ç–µ—Ä"]["–°—Å—ã–ª–∫–∞"])
                await ctx.send(embed=e, delete_after=60)
                await self.alerts(ctx.author, f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É: {ctx.command.name} {trigger} {timetag}\n"
                                              f"–ö–∞–Ω–∞–ª: {ctx.message.channel}")
        except Exception:
            await self.errors(f"–ö–æ–º–∞–Ω–¥–∞ {ctx.command.name}:", format_exc())


def setup(bot):
    bot.add_cog(Arts(bot))
